apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:026090541898:certificate/7a3b45ab-7b48-4b22-b004-ee1d51ec340d,arn:aws:acm:ap-northeast-2:026090541898:certificate/72ee7a55-8175-480b-af0c-923978eb37b7
    alb.ingress.kubernetes.io/group.name: ing-esp-stg-container
    alb.ingress.kubernetes.io/healthcheck-healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-success-codes: '200'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthcheck-unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}, {"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-name: alb-esp-stg-container
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: 'false'
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/security-groups: sg-0b86772b2569a499f
    # alb.ingress.kubernetes.io/tags: Name=alb-esp-stg-container
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.order: '10'
  name: ing-esp-stg-nginx
  namespace: default
spec:
  ingressClassName: alb
  rules:
    # static-dev.ezwel.com: static
    # files-dev.ezwel.com: files
    - host: stg.ezwelesp.com
      http:
        paths:
          - backend:
              service:
                name: nginx-svc
                port:
                  number: 80
            path: /
            pathType: Prefix
